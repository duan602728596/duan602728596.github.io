(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3073],{1203:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return nn}});var r=t(67294),i=t(9008),s=t.n(i),a=t(48726),c=t(22410),o=t(41420),l=t(8333),d=t(35820),u=t.n(d),h=t(9938),f=t.n(h),p=t(8571),x=t.n(p),m=t(88946),v=t.n(m),j=t(56481),g=t(97029),w=t(88936);t(83710),t(41539),t(39714),t(68309),t(74916);var _=t(35704),b=t.n(_),k=t(10349),Z=t.n(k),y=t(52472),N=t.n(y),L=t(19389),T=t.n(L),I=t(98235),S=t.n(I),A=t(68420),P=t(27344),C=t(30222),F=t.n(C);function q(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}var E=function(){function n(e){(0,A.Z)(this,n),this.workerLen=null!=e?e:3,this.list=[],this.worker=Array(this.workerLen)}return(0,P.Z)(n,[{key:"executionFunc",value:F().mark(function n(e,t){var r,i,s,a,c=arguments;return F().wrap(function(n){for(;;)switch(n.prev=n.next){case 0:for(r=this,s=Array((i=c.length)>2?i-2:0),a=2;a<i;a++)s[a-2]=c[a];return n.next=4,t.call.apply(t,s).then(function(){r.worker[e]=void 0,r.run()});case 4:case"end":return n.stop()}},n,this)})},{key:"addList",value:function(n){var e,t=function(n,e){var t=void 0!==N()&&T()(n)||n["@@iterator"];if(!t){if(S()(n)||(t=function(n,e){if(n){if("string"==typeof n)return q(n,e);var t,r=b()(t=Object.prototype.toString.call(n)).call(t,8,-1);if("Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r)return Z()(n);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return q(n,e)}}(n))){t&&(n=t);var r=0,i=function(){};return{s:i,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:i}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,a=!0,c=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return a=n.done,n},e:function(n){c=!0,s=n},f:function(){try{a||null==t.return||t.return()}finally{if(c)throw s}}}}(n);try{for(t.s();!(e=t.n()).done;){var r=e.value;this.list.unshift(r)}}catch(n){t.e(n)}finally{t.f()}}},{key:"run",value:function(){for(var n=[],e=0;e<this.workerLen;e++){var t,r=this.list.length;!this.worker[e]&&r>0&&(this.worker[e]=this.executionFunc.apply(this,x()(t=[e]).call(t,(0,o.Z)(this.list[r-1]))),n.push(e),this.list.pop())}for(var i=0;i<n.length;i++){var s=n[i];this.worker[s].next()}}}]),n}(),z=t(85893),H=a.Z.Title,B=a.Z.Paragraph,J=new E,O=function(n){var e=(0,r.useState)([{id:"1",endTime:3,status:0},{id:"2",endTime:9,status:0},{id:"3",endTime:12,status:0},{id:"4",endTime:5,status:0},{id:"5",endTime:7,status:0},{id:"6",endTime:1,status:0}]),t=(0,l.Z)(e,2),i=t[0],s=t[1],a=(0,r.useState)([]),c=(0,l.Z)(a,2),d=c[0],h=c[1],p=(0,r.useState)(void 0),m=(0,l.Z)(p,2),_=m[0],b=m[1],k=(0,r.useState)(!1),Z=(0,l.Z)(k,2),y=Z[0],N=Z[1];function L(n){return n.status=1,s(function(n){return(0,o.Z)(n)}),new(u())(function(e,t){f()(function(){n.status=2,s(function(n){return(0,o.Z)(n)});var t=[];h(function(e){var r;return t=x()(r=[]).call(r,(0,o.Z)(e),[n.id])}),6===t.length&&b(void 0),e()},1e3*n.endTime)})}return(0,z.jsxs)(r.Fragment,{children:[(0,z.jsx)(H,{level:2,children:"代码演示"}),(0,z.jsx)(B,{children:"共有6个任务，每个任务过一定时间后完成。任务执行完成后执行下一个任务，最多有3个任务在执行。"}),(0,z.jsx)("div",{className:"text-right mb-[16px]",children:y?(0,z.jsx)(g.ZP,{type:"primary",danger:!0,disabled:_,onClick:function(n){s(v()(i).call(i,function(n){return n.status=0,n})),N(!1),h([])},children:"重置任务"}):(0,z.jsx)(g.ZP,{type:"primary",onClick:function(n){b(!0),N(!0);var e=v()(i).call(i,function(n,e){return[L,void 0,n]});J.addList(e),J.run()},children:"开始任务"})}),(0,z.jsx)(w.Z,{size:"middle",bordered:!0,columns:[{title:"任务ID",dataIndex:"id",width:"33%"},{title:"执行时间（s）",dataIndex:"endTime",width:"33%"},{title:"执行状态",dataIndex:"status",width:"33%",render:function(n,e,t){switch(n){case 0:return(0,z.jsx)(j.Z,{children:"未执行"});case 1:return(0,z.jsx)(j.Z,{color:"#f50",children:"执行中"});case 2:return(0,z.jsx)(j.Z,{color:"#87d068",children:"执行完毕"})}}}],dataSource:i,rowKey:"id",pagination:!1}),(0,z.jsxs)("p",{className:"py-[16px] px-0",children:[(0,z.jsx)("b",{children:"已完成任务："}),0===d.length?(0,z.jsx)(j.Z,{children:"无"}):v()(d).call(d,function(n,e){return(0,z.jsxs)(j.Z,{color:e%2==0?"magenta":"purple",children:["任务",n]},n)})]})]})},R=t(67552),X=t.n(R),D=t(11151);function G(n){var e=X()({pre:"pre",code:"code"},(0,D.ah)(),n.components);return(0,z.jsx)(e.pre,{children:(0,z.jsx)(e.code,{className:"language-javascript",children:"class Queue {\n  constructor(workerLen) {\n    this.workerLen = workerLen ?? 3;         // 同时执行的任务数\n    this.list = [];                          // 任务队列\n    this.worker = new Array(this.workerLen); // 正在执行的任务\n  }\n\n  /**\n   * 执行一个任务\n   * @param { number } index\n   * @param { Function } fn: 执行的函数\n   * @param { Array } args: 传递给执行函数的参数\n   */\n  *executionFunc(index, fn, ...args) {\n    const _this = this;\n\n    yield fn.call(...args)\n      .then(function() {\n        // 任务执行完毕后，再次分配任务并执行任务\n        _this.worker[index] = undefined;\n        _this.run();\n      });\n  }\n\n  /**\n   * 添加到任务队列\n   * @param { Array<any[]> } list: 任务队列\n   */\n  addList(list) {\n    for (const item of list) {\n      this.list.unshift(item);\n    }\n  }\n\n  // 分配并执行任务\n  run() {\n    const runIndex = [];\n\n    for (let i = 0; i < this.workerLen; i++) {\n      const len = this.list.length;\n\n      if (!this.worker[i] && len > 0) {\n        // 需要执行的任务\n        this.worker[i] = this.executionFunc(i, ...this.list[len - 1]);\n\n        runIndex.push(i);\n\n        // 从任务队列内删除任务\n        this.list.pop();\n      }\n    }\n\n    // 执行任务\n    for (const index of runIndex) {\n      this.worker[index].next();\n    }\n  }\n}\n"})})}var K=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=X()({},(0,D.ah)(),n.components).wrapper;return e?(0,z.jsx)(e,X()({},n,{children:(0,z.jsx)(G,n)})):G(n)};function Q(n){var e=X()({pre:"pre",code:"code"},(0,D.ah)(),n.components);return(0,z.jsx)(e.pre,{children:(0,z.jsx)(e.code,{className:"language-javascript",children:"// 延迟执行的函数\nfunction sleep(id, time) {\n  console.log('开始id', id);\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log('结束id', id);\n      resolve();\n    }, time * 1000);\n  });\n}\n\nconst queue = new Queue();\n\n// 添加到任务队列\nqueue.addList([\n  [sleep, undefined, '0001', 3],\n  [sleep, undefined, '0002', 5],\n  [sleep, undefined, '0003', 8],\n  [sleep, undefined, '0004', 1],\n  [sleep, undefined, '0005', 12],\n  [sleep, undefined, '0006', 8],\n  [sleep, undefined, '0007', 2],\n  [sleep, undefined, '0008', 10]\n]);\n\n// 执行任务\nqueue.run();\n"})})}var M=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=X()({},(0,D.ah)(),n.components).wrapper;return e?(0,z.jsx)(e,X()({},n,{children:(0,z.jsx)(Q,n)})):Q(n)};function U(n){var e=X()({pre:"pre",code:"code"},(0,D.ah)(),n.components);return(0,z.jsx)(e.pre,{children:(0,z.jsx)(e.code,{children:"开始id 0001\n开始id 0002\n开始id 0003\n结束id 0001\n开始id 0004\n结束id 0004\n开始id 0005\n结束id 0002\n开始id 0006\n结束id 0003\n开始id 0007\n结束id 0007\n开始id 0008\n结束id 0006\n结束id 0005\n结束id 0008\n"})})}var V=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=X()({},(0,D.ah)(),n.components).wrapper;return e?(0,z.jsx)(e,X()({},n,{children:(0,z.jsx)(U,n)})):U(n)},Y=a.Z.Title,$=a.Z.Paragraph,W=function(n){return(0,z.jsxs)(c.Z,{children:[(0,z.jsx)(Y,{children:"用JS实现多个任务并行执行的队列"}),(0,z.jsx)(Y,{level:2,children:"使用场景"}),(0,z.jsx)($,{children:"今天在开发时，碰到了这么一个需求：需要上传多个视频文件；每个文件的上传在新线程内执行；同时最多有三个上传任务在执行； 当一个任务执行完毕，执行下一个任务。这个需求就是并行执行队列内的任务。"}),(0,z.jsx)($,{children:"为了能够满足要求，需要知道可以同时执行的任务数、任务队列、正在执行的任务。当一个任务执行完毕后，需要分配下一个执行的任务。"}),(0,z.jsx)(Y,{level:2,children:"代码实现"}),(0,z.jsx)($,{children:"首先定义一个类："}),(0,z.jsx)(K,{}),(0,z.jsx)($,{children:"定义一个延迟执行的异步函数，并执行任务，测试代码是否满足需求："}),(0,z.jsx)(M,{}),(0,z.jsx)($,{children:"在控制台上会输出："}),(0,z.jsx)(V,{}),(0,z.jsx)($,{children:"可以看到，开始时执行了三个任务；每当有任务执行完毕，就会执行下一个任务。这样就满足了并行执行队列内的任务的需求。"}),(0,z.jsx)(O,{})]})};function nn(n){return(0,z.jsxs)(r.Fragment,{children:[(0,z.jsxs)(s(),{children:[(0,z.jsx)("title",{children:"用JS实现多个任务并行执行的队列"}),(0,z.jsx)("meta",{name:"keywords",content:"前端, js, javascript, typescript, node"}),(0,z.jsx)("meta",{name:"description",content:"用JS实现多个任务并行执行的队列"})]}),(0,z.jsx)(W,{})]})}},54892:function(n,e,t){"use strict";var r=t(19623),i=t(73935),s=t(11163),a=t(35846),c=t(97029),o=t(75162),l=t(37653),d=t(76467),u=t(3744),h=t.n(u),f=t(85893),p=a.Z.BackTop;e.Z=function(n){var e=(0,s.useRouter)();return[(0,f.jsxs)("div",{className:h().main,children:[n.goBack?(0,f.jsx)("div",{className:"mb-[16px] text-right",children:(0,f.jsxs)(c.ZP,{onClick:function(n){e.push("/")},children:[(0,f.jsx)(l.Z,{className:"mr-[6px]"}),"返回"]})}):null,null==n?void 0:n.children]},"main"),(0,f.jsx)(d.default,{children:null!=n&&n.goToTop&&("undefined"==typeof document?"undefined":(0,r.Z)(document))==="object"?(0,i.createPortal)((0,f.jsx)(p,{type:"primary",icon:(0,f.jsx)(o.Z,{}),title:"返回顶部",tabIndex:0,role:"button","aria-label":"返回顶部"}),document.body):null},"backTop")]}},34341:function(n,e,t){"use strict";t(74916);var r=t(88946),i=t.n(r),s=t(81290),a=t.n(s),c=t(41664),o=t.n(c),l=t(97183),d=t(42075),u=t(83062),h=t(67337),f=t(62139),p=t.n(f),x=t(30654),m=t(85893),v=[{href:"/",title:"文章"},{href:"/favorites",title:"收藏夹"},{href:"/project",title:"开源项目"}],j=["github.io","vercel.app"],g=i()(v).call(v,function(n,e){return(0,m.jsx)("li",{className:p().navListItem,children:(0,m.jsx)(o(),{href:n.href,children:n.title})},n.href)});e.Z=function(n){return(0,m.jsx)(l.Z.Header,{className:p().antdHeader,children:(0,m.jsxs)("div",{className:p().header,children:[(0,m.jsx)("nav",{className:p().headerLeft,children:(0,m.jsx)("ul",{className:p().navList,children:g})}),(0,m.jsx)("div",{className:p().headerRight,children:(0,m.jsxs)(d.Z,{size:16,children:[(0,m.jsx)(u.Z,{title:"切换网站地址",children:(0,m.jsx)("a",{className:p().switchAddress,role:"button",tabIndex:0,"aria-label":"切换网站地址",onClick:function(n){var e=window.location,t=e.pathname,r=e.hostname,i=/github\.io/.test(r);window.location.href=new(a())(t,"https://duan602728596.".concat(j[i?1:0],"/"))},children:(0,m.jsx)(h.Z,{className:p().switchAddressIcon})})}),(0,m.jsx)("a",{className:p().githubLink,href:"https://github.com/duan602728596",target:"_blank",rel:"noopener noreferrer",children:(0,m.jsx)(x.Z,{className:"block w-full h-full",imageClassName:"block w-full h-full",avifSrc:"/images/github.avif",webpSrc:"/images/github.webp",src:"/images/github.png",alt:"github"})})]})})]})})}},30654:function(n,e,t){"use strict";var r=t(85893);e.Z=function(n){var e=n.className,t=n.imageClassName,i=n.avifSrc,s=n.webpSrc,a=n.src,c=n.alt;return(0,r.jsxs)("picture",{className:e,children:[i&&(0,r.jsx)("source",{srcSet:i,type:"image/avif"}),s&&(0,r.jsx)("source",{srcSet:s,type:"image/webp"}),(0,r.jsx)("img",{className:t,src:a,alt:c})]})}},22410:function(n,e,t){"use strict";var r=t(67294),i=t(34341),s=t(54892),a=t(85893);e.Z=function(n){return(0,a.jsxs)(r.Fragment,{children:[(0,a.jsx)(i.Z,{}),(0,a.jsx)(s.Z,{goToTop:!0,goBack:!0,children:n.children})]})}},47727:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/article/web/queue-in-js",function(){return t(1203)}])},3744:function(n){n.exports={main:"main_main__IZXSv",goToTop:"main_goToTop__Py8c8"}},62139:function(n){n.exports={antdHeader:"nav_antdHeader__eCvl0",header:"nav_header__y1mlw",headerLeft:"nav_headerLeft__PrT7_",headerRight:"nav_headerRight__JfqYP",navList:"nav_navList__3HXot",navListItem:"nav_navListItem__hpAdz",switchAddress:"nav_switchAddress__sVzqD",githubLink:"nav_githubLink__BDzSl",switchAddressIcon:"nav_switchAddressIcon__KLxGG"}}},function(n){n.O(0,[3576,7467,9166,3791,223,971,1484,8936,9774,2888,179],function(){return n(n.s=47727)}),_N_E=n.O()}]);