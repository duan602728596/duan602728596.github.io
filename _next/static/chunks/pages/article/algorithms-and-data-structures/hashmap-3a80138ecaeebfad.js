(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[391],{27697:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return V}});var r=t(67294),a=t(9008),s=t.n(a),i=t(76315),l=t(55147),c=t(62079),u=t.n(c),o=t(52020),h=t.n(o),d=t(73324),f=t.n(d),x=t(88546),v=t.n(x),m=t(99595),p=t.n(m),j=t(66775),_=t.n(j),b=t(2201),k=t.n(b),g=t(57445),y=t.n(g),w=t(44845),N=t(85893),Z=t(11151);function H(n,e){var t=u()(n);if(h()){var r=h()(n);e&&(r=f()(r).call(r,function(e){return v()(n,e).enumerable})),t.push.apply(t,r)}return t}function C(n){for(var e=1;e<arguments.length;e++){var t,r,a=null!=arguments[e]?arguments[e]:{};e%2?p()(t=H(Object(a),!0)).call(t,function(e){(0,w.Z)(n,e,a[e])}):_()?k()(n,_()(a)):p()(r=H(Object(a))).call(r,function(e){y()(n,e,v()(a,e))})}return n}function T(n){var e=C(C({code:"code",pre:"pre"},(0,Z.a)()),n.components);return(0,N.jsx)(e.pre,{children:(0,N.jsx)(e.code,{className:"language-javascript",children:"// 链表的节点\nclass Node {\n  constructor(key, value, next = null) {\n    this.key = key;\n    this.value = value;\n    this.next = next;\n  }\n}\n\n// HashMap\nclass HashMap {\n  constructor(size = 16) {\n    this.size = 0;\n    this.table = [];\n\n    for (let i = 0; i < size; i++) {\n      this.table[i] = [null, 0];\n    }\n  }\n\n  hashConversion(key) {\n    let keyCode = 0;\n\n    for(const item of key) {\n      keyCode += item.charCodeAt(0)\n    }\n\n    return keyCode % this.table.length;\n  }\n\n  set(key, value) {\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      this.table[index][0] = new Node(key, value);\n      this.table[index][1] += 1;\n      this.size += 1;\n\n      return;\n    }\n\n    let currentBefore = null;\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        current.value = value;\n        break;\n      } else {\n        currentBefore = current;\n        current = current.next;\n      }\n    }\n\n    if (current === null) {\n      currentBefore.next = new Node(key, value);\n      this.table[index][1] += 1;\n      this.size += 1;\n    }\n  }\n\n  get(key) {\n    let result = null;\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      return result;\n    }\n\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        result = current.value;\n        break;\n      }\n    }\n\n    return result;\n  }\n\n  remove(key) {\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      return;\n    }\n\n    let currentBefore = null;\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        if (currentBefore === null) {\n          this.table[index][0] = current.next;\n        } else {\n          currentBefore.next = current.next;\n        }\n\n        this.table[index][1] -= 1;\n        this.size -= 1;\n        break;\n      } else {\n        currentBefore = current;\n        current = current.next;\n      }\n    }\n  }\n}\n"})})}function L(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=C(C({},(0,Z.a)()),n.components).wrapper;return e?(0,N.jsx)(e,C(C({},n),{},{children:(0,N.jsx)(T,C({},n))})):T(n)}var M=i.Z.Title,B=i.Z.Paragraph,z=function(n){return(0,N.jsxs)(l.Z,{children:[(0,N.jsx)(M,{children:"数据结构之HashMap"}),(0,N.jsx)(B,{children:"HashMap的结构，是数组+链表+红黑树的结构。当链表长度大于8时，转为红黑树结构。HashMap是线程不安全的。"}),(0,N.jsx)(M,{level:2,children:"模拟实现一个HashMap"}),(0,N.jsx)(B,{children:"在我面试微软时，有一道题目是用JavaScript模拟实现一个HashMap。当时不了解HashMap是什么。 所以现在重新模拟实现HashMap，没有红黑树的结构，也没有线程安全的保证。存粹是为了学习。"}),(0,N.jsx)(L,{})]})};function V(n){return(0,N.jsxs)(r.Fragment,{children:[(0,N.jsxs)(s(),{children:[(0,N.jsx)("title",{children:"数据结构之HashMap"}),(0,N.jsx)("meta",{name:"keywords",content:"算法, HashMap"}),(0,N.jsx)("meta",{name:"description",content:"数据结构之HashMap"})]}),(0,N.jsx)(z,{})]})}},19668:function(n,e,t){"use strict";var r=t(85893);e.Z=function(n){var e=n.href,t=n.className,a=n.children;return(0,r.jsx)("a",{className:t,href:e,target:"_blank",rel:"noopener noreferrer",children:a})}},39243:function(n,e,t){"use strict";var r=t(19623),a=t(73935),s=t(11163),i=t(81860),l=t(18610),c=t(75162),u=t(6171),o=t(76467),h=t(63791),d=t.n(h),f=t(85893),x=i.Z.BackTop;e.Z=function(n){var e=(0,s.useRouter)();return[(0,f.jsxs)("div",{className:d().main,children:[n.goBack?(0,f.jsx)("div",{className:"mb-[16px] text-right",children:(0,f.jsxs)(l.ZP,{onClick:function(n){e.push("/")},children:[(0,f.jsx)(u.Z,{className:"mr-[6px]"}),"返回"]})}):null,null==n?void 0:n.children]},"main"),(0,f.jsx)(o.default,{children:null!=n&&n.goToTop&&("undefined"==typeof document?"undefined":(0,r.Z)(document))==="object"?(0,a.createPortal)((0,f.jsx)(x,{type:"primary",icon:(0,f.jsx)(c.Z,{}),title:"返回顶部",tabIndex:0,role:"button","aria-label":"返回顶部"}),document.body):null},"backTop")]}},31725:function(n,e,t){"use strict";t(64043);var r=t(88946),a=t.n(r),s=t(81290),i=t.n(s),l=t(41664),c=t.n(l),u=t(21612),o=t(78957),h=t(83062),d=t(67337),f=t(32958),x=t.n(f),v=t(96808),m=t(19668),p=t(85893),j=[{href:"/",title:"文章"},{href:"/favorites",title:"收藏夹"},{href:"/project",title:"开源项目"}],_=["github.io","vercel.app"],b=a()(j).call(j,function(n,e){return(0,p.jsx)("li",{className:x().navListItem,children:(0,p.jsx)(c(),{href:n.href,children:n.title})},n.href)});e.Z=function(n){return(0,p.jsx)(u.Z.Header,{className:x().antdHeader,children:(0,p.jsxs)("div",{className:x().header,children:[(0,p.jsx)("nav",{className:x().headerLeft,children:(0,p.jsx)("ul",{className:x().navList,children:b})}),(0,p.jsx)("div",{className:x().headerRight,children:(0,p.jsxs)(o.Z,{size:16,children:[(0,p.jsx)(h.Z,{title:"切换网站地址",children:(0,p.jsx)("a",{className:x().switchAddress,role:"button",tabIndex:0,"aria-label":"切换网站地址",onClick:function(n){var e=window.location,t=e.pathname,r=e.hostname,a=/github\.io/.test(r);window.location.href=new(i())(t,"https://duan602728596.".concat(_[a?1:0],"/"))},children:(0,p.jsx)(d.Z,{className:x().switchAddressIcon})})}),(0,p.jsx)(m.Z,{className:x().githubLink,href:"https://github.com/duan602728596",children:(0,p.jsx)(v.Z,{className:"block w-full h-full",imageClassName:"block w-full h-full",avifSrc:"/images/github.avif",webpSrc:"/images/github.webp",src:"/images/github.png",alt:"github"})})]})})]})})}},96808:function(n,e,t){"use strict";var r=t(85893);e.Z=function(n){var e=n.className,t=n.imageClassName,a=n.avifSrc,s=n.webpSrc,i=n.src,l=n.alt;return(0,r.jsxs)("picture",{className:e,children:[a&&(0,r.jsx)("source",{srcSet:a,type:"image/avif"}),s&&(0,r.jsx)("source",{srcSet:s,type:"image/webp"}),(0,r.jsx)("img",{className:t,src:i,alt:l})]})}},55147:function(n,e,t){"use strict";var r=t(67294),a=t(31725),s=t(39243),i=t(85893);e.Z=function(n){return(0,i.jsxs)(r.Fragment,{children:[(0,i.jsx)(a.Z,{}),(0,i.jsx)(s.Z,{goToTop:!0,goBack:!0,children:n.children})]})}},81019:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/article/algorithms-and-data-structures/hashmap",function(){return t(27697)}])},63791:function(n){n.exports={main:"main_main__IZXSv",goToTop:"main_goToTop__Py8c8"}},32958:function(n){n.exports={antdHeader:"nav_antdHeader__eCvl0",header:"nav_header__y1mlw",headerLeft:"nav_headerLeft__PrT7_",headerRight:"nav_headerRight__JfqYP",navList:"nav_navList__3HXot",navListItem:"nav_navListItem__hpAdz",switchAddress:"nav_switchAddress__sVzqD",githubLink:"nav_githubLink__BDzSl",switchAddressIcon:"nav_switchAddressIcon__KLxGG"}}},function(n){n.O(0,[8610,1447,4530,9774,2888,179],function(){return n(n.s=81019)}),_N_E=n.O()}]);