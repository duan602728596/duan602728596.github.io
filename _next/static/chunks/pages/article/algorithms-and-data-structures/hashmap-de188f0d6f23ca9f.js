(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[391],{81019:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/article/algorithms-and-data-structures/hashmap",function(){return t(77833)}])},77833:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return p}});var r=t(85893),i=t(67294),s=t(9008),l=t.n(s),a=t(1918),u=t(12424),c=t(11151);function o(n){let e={code:"code",pre:"pre",...(0,c.a)(),...n.components};return(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// 链表的节点\nclass Node {\n  constructor(key, value, next = null) {\n    this.key = key;\n    this.value = value;\n    this.next = next;\n  }\n}\n\n// HashMap\nclass HashMap {\n  constructor(size = 16) {\n    this.size = 0;\n    this.table = [];\n\n    for (let i = 0; i < size; i++) {\n      this.table[i] = [null, 0];\n    }\n  }\n\n  hashConversion(key) {\n    let keyCode = 0;\n\n    for(const item of key) {\n      keyCode += item.charCodeAt(0)\n    }\n\n    return keyCode % this.table.length;\n  }\n\n  set(key, value) {\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      this.table[index][0] = new Node(key, value);\n      this.table[index][1] += 1;\n      this.size += 1;\n\n      return;\n    }\n\n    let currentBefore = null;\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        current.value = value;\n        break;\n      } else {\n        currentBefore = current;\n        current = current.next;\n      }\n    }\n\n    if (current === null) {\n      currentBefore.next = new Node(key, value);\n      this.table[index][1] += 1;\n      this.size += 1;\n    }\n  }\n\n  get(key) {\n    let result = null;\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      return result;\n    }\n\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        result = current.value;\n        break;\n      }\n    }\n\n    return result;\n  }\n\n  remove(key) {\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      return;\n    }\n\n    let currentBefore = null;\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        if (currentBefore === null) {\n          this.table[index][0] = current.next;\n        } else {\n          currentBefore.next = current.next;\n        }\n\n        this.table[index][1] -= 1;\n        this.size -= 1;\n        break;\n      } else {\n        currentBefore = current;\n        current = current.next;\n      }\n    }\n  }\n}\n"})})}function h(n={}){let{wrapper:e}={...(0,c.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(o,{...n})}):o(n)}let{Title:d,Paragraph:x}=a.default;var f=function(n){return(0,r.jsxs)(u.Z,{children:[(0,r.jsx)(d,{children:"数据结构之HashMap"}),(0,r.jsx)(x,{children:"HashMap的结构，是数组+链表+红黑树的结构。当链表长度大于8时，转为红黑树结构。HashMap是线程不安全的。"}),(0,r.jsx)(d,{level:2,children:"模拟实现一个HashMap"}),(0,r.jsx)(x,{children:"在我面试微软时，有一道题目是用JavaScript模拟实现一个HashMap。当时不了解HashMap是什么。 所以现在重新模拟实现HashMap，没有红黑树的结构，也没有线程安全的保证。存粹是为了学习。"}),(0,r.jsx)(h,{})]})};function p(n){return(0,r.jsxs)(i.Fragment,{children:[(0,r.jsxs)(l(),{children:[(0,r.jsx)("title",{children:"数据结构之HashMap"}),(0,r.jsx)("meta",{name:"keywords",content:"算法, HashMap"}),(0,r.jsx)("meta",{name:"description",content:"数据结构之HashMap"})]}),(0,r.jsx)(f,{})]})}},11035:function(n,e,t){"use strict";var r=t(85893),i=t(73935),s=t(39332),l=t(57140),a=t(44594),u=t(84669),c=t(85486),o=t(76467),h=t(45212),d=t.n(h);let{BackTop:x}=l.default;e.Z=function(n){let e=(0,s.useRouter)();return[(0,r.jsxs)("div",{className:d().main,children:[n.goBack?(0,r.jsx)("div",{className:"mb-[16px] text-right",children:(0,r.jsxs)(a.ZP,{onClick:function(n){e.push("/")},children:[(0,r.jsx)(c.Z,{className:"mr-[6px]"}),"返回"]})}):null,n?.children]},"main"),n?.goToTop?(0,r.jsx)(o.default,{children:"object"==typeof document?(0,i.createPortal)((0,r.jsx)(x,{type:"primary",icon:(0,r.jsx)(u.Z,{}),title:"返回顶部",tabIndex:0,role:"button","aria-label":"返回顶部"}),document.body):null},"backTop"):null]}},12424:function(n,e,t){"use strict";var r=t(85893),i=t(1918),s=t(11035);e.Z=function(n){return(0,r.jsx)(s.Z,{goToTop:!0,goBack:!0,children:(0,r.jsx)(i.default,{children:n.children})})}},45212:function(n){n.exports={main:"main_main__IZXSv",goToTop:"main_goToTop__Py8c8"}}},function(n){n.O(0,[4594,2409,2888,9774,179],function(){return n(n.s=81019)}),_N_E=n.O()}]);