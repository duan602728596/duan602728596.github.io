(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[391],{99374:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return v}});var r=t(67294),s=t(9008),a=t.n(s),i=t(48726),l=t(22410),c=t(67552),u=t.n(c),o=t(85893),h=t(11151);function d(e){var n=u()({pre:"pre",code:"code"},(0,h.ah)(),e.components);return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// 链表的节点\nclass Node {\n  constructor(key, value, next = null) {\n    this.key = key;\n    this.value = value;\n    this.next = next;\n  }\n}\n\n// HashMap\nclass HashMap {\n  constructor(size = 16) {\n    this.size = 0;\n    this.table = [];\n\n    for (let i = 0; i < size; i++) {\n      this.table[i] = [null, 0];\n    }\n  }\n\n  hashConversion(key) {\n    let keyCode = 0;\n\n    for(const item of key) {\n      keyCode += item.charCodeAt(0)\n    }\n\n    return keyCode % this.table.length;\n  }\n\n  set(key, value) {\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      this.table[index][0] = new Node(key, value);\n      this.table[index][1] += 1;\n      this.size += 1;\n\n      return;\n    }\n\n    let currentBefore = null;\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        current.value = value;\n        break;\n      } else {\n        currentBefore = current;\n        current = current.next;\n      }\n    }\n\n    if (current === null) {\n      currentBefore.next = new Node(key, value);\n      this.table[index][1] += 1;\n      this.size += 1;\n    }\n  }\n\n  get(key) {\n    let result = null;\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      return result;\n    }\n\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        result = current.value;\n        break;\n      }\n    }\n\n    return result;\n  }\n\n  remove(key) {\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      return;\n    }\n\n    let currentBefore = null;\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        if (currentBefore === null) {\n          this.table[index][0] = current.next;\n        } else {\n          currentBefore.next = current.next;\n        }\n\n        this.table[index][1] -= 1;\n        this.size -= 1;\n        break;\n      } else {\n        currentBefore = current;\n        current = current.next;\n      }\n    }\n  }\n}\n"})})}var x=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=u()({},(0,h.ah)(),e.components).wrapper;return n?(0,o.jsx)(n,u()({},e,{children:(0,o.jsx)(d,e)})):d(e)},f=i.Z.Title,p=i.Z.Paragraph,m=function(e){return(0,o.jsxs)(l.Z,{children:[(0,o.jsx)(f,{children:"数据结构之HashMap"}),(0,o.jsx)(p,{children:"HashMap的结构，是数组+链表+红黑树的结构。当链表长度大于8时，转为红黑树结构。HashMap是线程不安全的。"}),(0,o.jsx)(f,{level:2,children:"模拟实现一个HashMap"}),(0,o.jsx)(p,{children:"在我面试微软时，有一道题目是用JavaScript模拟实现一个HashMap。当时不了解HashMap是什么。 所以现在重新模拟实现HashMap，没有红黑树的结构，也没有线程安全的保证。存粹是为了学习。"}),(0,o.jsx)(x,{})]})};function v(e){return(0,o.jsxs)(r.Fragment,{children:[(0,o.jsxs)(a(),{children:[(0,o.jsx)("title",{children:"数据结构之HashMap"}),(0,o.jsx)("meta",{name:"keywords",content:"算法, HashMap"}),(0,o.jsx)("meta",{name:"description",content:"数据结构之HashMap"})]}),(0,o.jsx)(m,{})]})}},54892:function(e,n,t){"use strict";var r=t(19623),s=t(73935),a=t(11163),i=t(51341),l=t(97029),c=t(75162),u=t(37653),o=t(76467),h=t(3744),d=t.n(h),x=t(85893),f=i.Z.BackTop;n.Z=function(e){var n=(0,a.useRouter)();return[(0,x.jsxs)("div",{className:d().main,children:[e.goBack?(0,x.jsx)("div",{className:"mb-[16px] text-right",children:(0,x.jsxs)(l.ZP,{onClick:function(e){n.push("/")},children:[(0,x.jsx)(u.Z,{className:"mr-[6px]"}),"返回"]})}):null,null==e?void 0:e.children]},"main"),(0,x.jsx)(o.default,{children:null!=e&&e.goToTop&&("undefined"==typeof document?"undefined":(0,r.Z)(document))==="object"?(0,s.createPortal)((0,x.jsx)(f,{type:"primary",icon:(0,x.jsx)(c.Z,{}),title:"返回顶部",tabIndex:0,role:"button","aria-label":"返回顶部"}),document.body):null},"backTop")]}},34341:function(e,n,t){"use strict";t(74916);var r=t(88946),s=t.n(r),a=t(81290),i=t.n(a),l=t(41664),c=t.n(l),u=t(97183),o=t(26713),h=t(83062),d=t(67337),x=t(62139),f=t.n(x),p=t(30654),m=t(85893),v=[{href:"/",title:"文章"},{href:"/favorites",title:"收藏夹"},{href:"/project",title:"开源项目"}],j=["github.io","vercel.app"],_=s()(v).call(v,function(e,n){return(0,m.jsx)("li",{className:f().navListItem,children:(0,m.jsx)(c(),{href:e.href,children:e.title})},e.href)});n.Z=function(e){return(0,m.jsx)(u.Z.Header,{className:f().antdHeader,children:(0,m.jsxs)("div",{className:f().header,children:[(0,m.jsx)("nav",{className:f().headerLeft,children:(0,m.jsx)("ul",{className:f().navList,children:_})}),(0,m.jsx)("div",{className:f().headerRight,children:(0,m.jsxs)(o.Z,{size:16,children:[(0,m.jsx)(h.Z,{title:"切换网站地址",children:(0,m.jsx)("a",{className:f().switchAddress,role:"button",tabIndex:0,"aria-label":"切换网站地址",onClick:function(e){var n=window.location,t=n.pathname,r=n.hostname,s=/github\.io/.test(r);window.location.href=new(i())(t,"https://duan602728596.".concat(j[s?1:0],"/"))},children:(0,m.jsx)(d.Z,{className:f().switchAddressIcon})})}),(0,m.jsx)("a",{className:f().githubLink,href:"https://github.com/duan602728596",target:"_blank",rel:"noopener noreferrer",children:(0,m.jsx)(p.Z,{className:"block w-full h-full",imageClassName:"block w-full h-full",avifSrc:"/images/github.avif",webpSrc:"/images/github.webp",src:"/images/github.png",alt:"github"})})]})})]})})}},30654:function(e,n,t){"use strict";var r=t(85893);n.Z=function(e){var n=e.className,t=e.imageClassName,s=e.avifSrc,a=e.webpSrc,i=e.src,l=e.alt;return(0,r.jsxs)("picture",{className:n,children:[s&&(0,r.jsx)("source",{srcSet:s,type:"image/avif"}),a&&(0,r.jsx)("source",{srcSet:a,type:"image/webp"}),(0,r.jsx)("img",{className:t,src:i,alt:l})]})}},22410:function(e,n,t){"use strict";var r=t(67294),s=t(34341),a=t(54892),i=t(85893);n.Z=function(e){return(0,i.jsxs)(r.Fragment,{children:[(0,i.jsx)(s.Z,{}),(0,i.jsx)(a.Z,{goToTop:!0,goBack:!0,children:e.children})]})}},81019:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/article/algorithms-and-data-structures/hashmap",function(){return t(99374)}])},3744:function(e){e.exports={main:"main_main__ovwFV",goToTop:"main_goToTop__Soij4"}},62139:function(e){e.exports={antdHeader:"nav_antdHeader__pc6AA",header:"nav_header__K7RoR",headerLeft:"nav_headerLeft__D5kPR",headerRight:"nav_headerRight__plZ1z",navList:"nav_navList__iDQNr",navListItem:"nav_navListItem__UblqT",switchAddress:"nav_switchAddress__vhjXS",githubLink:"nav_githubLink__1sY1n",switchAddressIcon:"nav_switchAddressIcon__e5KfQ"}}},function(e){e.O(0,[3576,4796,9425,9774,2888,179],function(){return e(e.s=81019)}),_N_E=e.O()}]);