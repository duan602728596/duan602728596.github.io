(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[391],{81019:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/article/algorithms-and-data-structures/hashmap",function(){return t(8968)}])},8968:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return p}});var r=t(85893),s=t(67294),i=t(9008),a=t.n(i),l=t(76315),c=t(30673),u=t(11151);function o(e){let n={code:"code",pre:"pre",...(0,u.a)(),...e.components};return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// 链表的节点\nclass Node {\n  constructor(key, value, next = null) {\n    this.key = key;\n    this.value = value;\n    this.next = next;\n  }\n}\n\n// HashMap\nclass HashMap {\n  constructor(size = 16) {\n    this.size = 0;\n    this.table = [];\n\n    for (let i = 0; i < size; i++) {\n      this.table[i] = [null, 0];\n    }\n  }\n\n  hashConversion(key) {\n    let keyCode = 0;\n\n    for(const item of key) {\n      keyCode += item.charCodeAt(0)\n    }\n\n    return keyCode % this.table.length;\n  }\n\n  set(key, value) {\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      this.table[index][0] = new Node(key, value);\n      this.table[index][1] += 1;\n      this.size += 1;\n\n      return;\n    }\n\n    let currentBefore = null;\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        current.value = value;\n        break;\n      } else {\n        currentBefore = current;\n        current = current.next;\n      }\n    }\n\n    if (current === null) {\n      currentBefore.next = new Node(key, value);\n      this.table[index][1] += 1;\n      this.size += 1;\n    }\n  }\n\n  get(key) {\n    let result = null;\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      return result;\n    }\n\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        result = current.value;\n        break;\n      }\n    }\n\n    return result;\n  }\n\n  remove(key) {\n    const index = this.hashConversion(key);\n    const indexValue = this.table[index][0];\n\n    if (indexValue === null) {\n      return;\n    }\n\n    let currentBefore = null;\n    let current = indexValue;\n\n    while (current) {\n      if (current.key === key) {\n        if (currentBefore === null) {\n          this.table[index][0] = current.next;\n        } else {\n          currentBefore.next = current.next;\n        }\n\n        this.table[index][1] -= 1;\n        this.size -= 1;\n        break;\n      } else {\n        currentBefore = current;\n        current = current.next;\n      }\n    }\n  }\n}\n"})})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}={...(0,u.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}let{Title:d,Paragraph:x}=l.default;var f=function(e){return(0,r.jsxs)(c.Z,{children:[(0,r.jsx)(d,{children:"数据结构之HashMap"}),(0,r.jsx)(x,{children:"HashMap的结构，是数组+链表+红黑树的结构。当链表长度大于8时，转为红黑树结构。HashMap是线程不安全的。"}),(0,r.jsx)(d,{level:2,children:"模拟实现一个HashMap"}),(0,r.jsx)(x,{children:"在我面试微软时，有一道题目是用JavaScript模拟实现一个HashMap。当时不了解HashMap是什么。 所以现在重新模拟实现HashMap，没有红黑树的结构，也没有线程安全的保证。存粹是为了学习。"}),(0,r.jsx)(h,{})]})};function p(e){return(0,r.jsxs)(s.Fragment,{children:[(0,r.jsxs)(a(),{children:[(0,r.jsx)("title",{children:"数据结构之HashMap"}),(0,r.jsx)("meta",{name:"keywords",content:"算法, HashMap"}),(0,r.jsx)("meta",{name:"description",content:"数据结构之HashMap"})]}),(0,r.jsx)(f,{})]})}},39182:function(e,n,t){"use strict";var r=t(85893),s=t(45697),i=t.n(s);function a(e){let{href:n,className:t,children:s}=e;return(0,r.jsx)("a",{className:t,href:n,target:"_blank",rel:"noopener noreferrer",children:s})}a.propTypes={href:i().string.isRequired,className:i().string,children:i().node.isRequired},n.Z=a},99388:function(e,n,t){"use strict";var r=t(85893),s=t(73935),i=t(45697),a=t.n(i),l=t(11163),c=t(81860),u=t(10932),o=t(75162),h=t(6171),d=t(76467),x=t(63791),f=t.n(x);let{BackTop:p}=c.default;function m(e){let n=(0,l.useRouter)();return[(0,r.jsxs)("div",{className:f().main,children:[e.goBack?(0,r.jsx)("div",{className:"mb-[16px] text-right",children:(0,r.jsxs)(u.ZP,{onClick:function(e){n.push("/")},children:[(0,r.jsx)(h.Z,{className:"mr-[6px]"}),"返回"]})}):null,null==e?void 0:e.children]},"main"),(0,r.jsx)(d.default,{children:(null==e?void 0:e.goToTop)&&"object"==typeof document?(0,s.createPortal)((0,r.jsx)(p,{type:"primary",icon:(0,r.jsx)(o.Z,{}),title:"返回顶部",tabIndex:0,role:"button","aria-label":"返回顶部"}),document.body):null},"backTop")]}m.propTypes={children:a().node,goToTop:a().bool,goBack:a().bool},n.Z=m},43221:function(e,n,t){"use strict";var r=t(85893),s=t(41664),i=t.n(s),a=t(21612),l=t(78957),c=t(83062),u=t(67337),o=t(32958),h=t.n(o),d=t(90791),x=t(39182);let f=["github.io","vercel.app"],p=[{href:"/",title:"文章"},{href:"/favorites",title:"收藏夹"},{href:"/project",title:"开源项目"}].map((e,n)=>(0,r.jsx)("li",{className:h().navListItem,children:(0,r.jsx)(i(),{href:e.href,children:e.title})},e.href));n.Z=function(e){return(0,r.jsx)(a.Z.Header,{className:h().antdHeader,children:(0,r.jsxs)("div",{className:h().header,children:[(0,r.jsx)("nav",{className:h().headerLeft,children:(0,r.jsx)("ul",{className:h().navList,children:p})}),(0,r.jsx)("div",{className:h().headerRight,children:(0,r.jsxs)(l.Z,{size:16,children:[(0,r.jsx)(c.Z,{title:"切换网站地址",children:(0,r.jsx)("a",{className:h().switchAddress,role:"button",tabIndex:0,"aria-label":"切换网站地址",onClick:function(e){let{pathname:n,hostname:t}=window.location,r=/github\.io/.test(t);window.location.href=new URL(n,"https://duan602728596.".concat(f[r?1:0],"/"))},children:(0,r.jsx)(u.Z,{className:h().switchAddressIcon})})}),(0,r.jsx)(x.Z,{className:h().githubLink,href:"https://github.com/duan602728596",children:(0,r.jsx)(d.Z,{className:"block w-full h-full",imageClassName:"block w-full h-full",avifSrc:"/images/github.avif",webpSrc:"/images/github.webp",src:"/images/github.png",alt:"github"})})]})})]})})}},90791:function(e,n,t){"use strict";var r=t(85893),s=t(45697),i=t.n(s);function a(e){let{className:n,imageClassName:t,avifSrc:s,webpSrc:i,src:a,alt:l}=e;return(0,r.jsxs)("picture",{className:n,children:[s&&(0,r.jsx)("source",{srcSet:s,type:"image/avif"}),i&&(0,r.jsx)("source",{srcSet:i,type:"image/webp"}),(0,r.jsx)("img",{className:t,src:a,alt:l})]})}a.propTypes={className:i().string,imageClassName:i().string,avifSrc:i().string,webpSrc:i().string,src:i().string},n.Z=a},30673:function(e,n,t){"use strict";var r=t(85893),s=t(67294),i=t(45697),a=t.n(i),l=t(43221),c=t(99388);function u(e){return(0,r.jsxs)(s.Fragment,{children:[(0,r.jsx)(l.Z,{}),(0,r.jsx)(c.Z,{goToTop:!0,goBack:!0,children:e.children})]})}u.propTypes={children:a().node},n.Z=u},63791:function(e){e.exports={main:"main_main__IZXSv",goToTop:"main_goToTop__Py8c8"}},32958:function(e){e.exports={antdHeader:"nav_antdHeader__eCvl0",header:"nav_header__y1mlw",headerLeft:"nav_headerLeft__PrT7_",headerRight:"nav_headerRight__JfqYP",navList:"nav_navList__3HXot",navListItem:"nav_navListItem__hpAdz",switchAddress:"nav_switchAddress__sVzqD",githubLink:"nav_githubLink__BDzSl",switchAddressIcon:"nav_switchAddressIcon__KLxGG"}}},function(e){e.O(0,[932,1447,4530,2888,9774,179],function(){return e(e.s=81019)}),_N_E=e.O()}]);